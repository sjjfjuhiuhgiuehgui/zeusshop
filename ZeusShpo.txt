🔑 專案結構與技術

後端：Go (Gin + GORM + MySQL + Redis)

product：商品 API（前台/後台管理）

order：訂單 API（下單 / 狀態管理 / 匯款後五碼 / 列印）

Middleware：簡易 Token 驗證（X-Admin-Token）

自動遷移：Product, Order, OrderItem, OrderCounter

前端：React 18 + Vite + React Router v6

Home, ProductDetail, Cart, Checkout, PaymentInfo

後台：AdminLogin, Orders, OrderDetail

API 使用 axios 封裝 (/src/api.js)

DB & Cache：

MySQL 8.0（utf8mb4 編碼）

Redis 7（下單限流）

📦 前台功能

商品展示

商品固定在前端 rawProducts → products（電腦A、B、C、泡腳機）。

下單流程只需要前端資訊（不再依賴後端查詢商品）。

購物車 / 結帳

可加入購物車 → 前端 localStorage 儲存。

/checkout：填寫姓名、電話、配送方式（自取 / 7-11 / 宅配）。

驗證：

手機需符合 09xxxxxxxx

7-11 需輸入門市代碼

宅配需輸入地址

下單流程

送出後：

生成訂單編號（格式 1140913001）。

顯示「匯款資訊頁」(PaymentInfo)。

顧客需輸入匯款帳號後五碼。

前端 API：updateOrderRemit(orderId, { remitCode })

🛠 後台功能

登入

/admin/login 輸入 Token 存入 localStorage.adminToken

訂單管理 /admin/orders

列表顯示所有訂單（200 筆內）

功能：

✅ 查看訂單詳情（新增「詳情」按鈕，不只點訂單號）

✅ 列印訂單（回復舊功能）

✅ 更新狀態：Pending → 已出貨 → 完成

✅ 刪除訂單

✅ 顯示「匯款後五碼」

訂單詳情 /admin/orders/:id

顯示完整訂單資訊（含商品、總額、匯款後五碼）

✅ 新增「返回」按鈕回列表

🔗 API 總表
Public

GET /api/products → 商品列表

GET /api/products/:id → 單一商品

POST /api/orders → 建立訂單

PUT /api/orders/:id/remit → 更新匯款後五碼

Admin（需 X-Admin-Token）

POST /api/admin/products → 新增商品

PUT /api/admin/products/:id → 更新商品

DELETE /api/admin/products/:id → 刪除商品

GET /api/admin/orders → 訂單列表

GET /api/admin/orders/:id → 訂單詳情

PUT /api/admin/orders/:id/status → 更新狀態（出貨/完成）

DELETE /api/admin/orders/:id → 刪除訂單